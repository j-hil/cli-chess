[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[project]
name = "jchess"
version = "22.10.80"
authors = [
    { name="j-hil", email="92876062+j-hil@users.noreply.github.com" },
]
description = "Chess in the command line."
readme = "README.md"
license = {text="GNU General Public License v3 (GPLv3)"}
keywords = ["chess", "terminal"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Development Status :: 2 - Pre-Alpha"
]
requires-python = ">=3.10"
dependencies = [
    "colorama>=0.4.5, <1",
]

[project.optional-dependencies]
dev = [
    "mypy>=0.971, <1",
    "types-colorama>=0.4.15, <1",
    "black>=22.8.0",
    "pylint>=2.15.2, <3",
    "pydocstyle[toml]>=6.1.1, <7",
    "coverage[toml]>=6.5.0, < 7",
    "isort>=5.10.1, <6",
]

[project.urls]
Homepage = "https://j-hil@github.com/j-hil/cli-chess.git"

[project.scripts]
jchess = "jchess.__main__:main"


[tool.mypy]
warn_return_any = true
warn_unused_configs = true
show_error_codes = true
strict = true
# required due to a mypy issue: https://github.com/python/mypy/issues/3004
disable_error_code = ["assignment", "comparison-overlap"]
# required as terminal as os dependent functionality
exclude = "terminal|tests"


[tool.pylint.basic]
# allows short names (which are to be used with due consideration):
argument-rgx = "(?#snake_case)^[a-z0-9]*(_[a-z0-9]+)*_?$"
variable-rgx = "(?#snake_case)^[a-z0-9]*(_[a-z0-9]+)*_?$"
attr-rgx = "(?#snake_case)^[a-z0-9]*(_[a-z0-9]+)*_?$"
const-rgx = "(?#CAPITAL_CASE)^[A-Z0-9]*(_[A-Z0-9]+)*_?|__[a-z]*__$"

[tool.pylint.format]
max-line-length=88

[tool.pylint.design]
# the defualt==7 really is too low
max-attributes=12
min-public-methods=0

[tool.pylint.messages_control]
# I decide if something needs a docstring, not pylint or pydocstyle :|
disable = [
    "missing-function-docstring",
    "missing-class-docstring",
    "missing-module-docstring",
]

[tool.pylint.reports]
output-format = "colorized"


[tool.isort]
profile = "black"


[tool.pydocstyle]
ignore = [
    "D1",  # Missing docstrings
    "D213",  # Multi-line docstring summary should start at the second line
    "D203",  # 1 blank line required before class docstring
    "D202",  # No blank lines allowed after function docstring
]


[tool.coverage.run]
branch = true
source = ["./src/jchess"]
omit = ["*/dev_tools/*"]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
]


